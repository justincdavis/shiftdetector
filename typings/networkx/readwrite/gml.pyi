"""
This type stub file was generated by pyright.
"""

from _typeshed import Incomplete
from collections.abc import Generator
from enum import Enum
from typing import Generic, NamedTuple, TypeVar

_T = TypeVar("_T")
__all__ = ["read_gml", "parse_gml", "generate_gml", "write_gml"]
def read_gml(path, label: str = ..., destringizer: Incomplete | None = ...):
    ...

def parse_gml(lines, label: str = ..., destringizer: Incomplete | None = ...):
    ...

class Pattern(Enum):
    KEYS = ...
    REALS = ...
    INTS = ...
    STRINGS = ...
    DICT_START = ...
    DICT_END = ...
    COMMENT_WHITESPACE = ...


class Token(NamedTuple, Generic[_T]):
    category: Pattern
    value: _T
    line: int
    position: int
    ...


def generate_gml(G, stringizer: Incomplete | None = ...) -> Generator[Incomplete, Incomplete, None]:
    ...

def write_gml(G, path, stringizer: Incomplete | None = ...) -> None:
    ...

