"""
This type stub file was generated by pyright.
"""

from _typeshed import Incomplete
from collections.abc import Iterator
from dataclasses import dataclass
from enum import Enum

class EdgePartition(Enum):
    OPEN = ...
    INCLUDED = ...
    EXCLUDED = ...


def minimum_spanning_edges(G, algorithm: str = ..., weight: str = ..., keys: bool = ..., data: bool = ..., ignore_nan: bool = ...):
    ...

def maximum_spanning_edges(G, algorithm: str = ..., weight: str = ..., keys: bool = ..., data: bool = ..., ignore_nan: bool = ...):
    ...

def minimum_spanning_tree(G, weight: str = ..., algorithm: str = ..., ignore_nan: bool = ...):
    ...

def partition_spanning_tree(G, minimum: bool = ..., weight: str = ..., partition: str = ..., ignore_nan: bool = ...):
    ...

def maximum_spanning_tree(G, weight: str = ..., algorithm: str = ..., ignore_nan: bool = ...):
    ...

def random_spanning_tree(G, weight: Incomplete | None = ..., *, multiplicative: bool = ..., seed: Incomplete | None = ...):
    ...

class SpanningTreeIterator:
    @dataclass
    class Partition:
        mst_weight: float
        partition_dict: dict[Incomplete, Incomplete]
        ...
    
    
    G: Incomplete
    weight: Incomplete
    minimum: Incomplete
    ignore_nan: Incomplete
    partition_key: str
    def __init__(self, G, weight: str = ..., minimum: bool = ..., ignore_nan: bool = ...) -> None:
        ...
    
    partition_queue: Incomplete
    def __iter__(self) -> Iterator[Incomplete]:
        ...
    
    def __next__(self):
        ...
    


